{"version":3,"sources":["../bower_components/angular-json-pretty/dist/angular-json-pretty.min.js","../bower_components/what-input/dist/what-input.js","../assets/scripts/main.js"],"names":["n","t","e","exports","module","define","amd","JSONPretty","window","angular","r","a","o","replace","directive","restrict","scope","data","link","$watch","html","JSON","parse","stringify","root","factory","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","currentInput","currentIntent","doc","document","documentElement","formInputs","functionList","ignoreMap","inputMap","keydown","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","inputTypes","isBuffering","isScrolling","mousePos","x","y","pointerMap","2","3","4","supportsPassive","opts","Object","defineProperty","get","addEventListener","addListeners","PointerEvent","updateInput","setIntent","MSPointerEvent","touchBuffer","detectWheel","passive","event","eventKey","which","value","type","pointerType","activeElem","activeElement","activeInput","nodeName","indexOf","toLowerCase","setInput","setAttribute","push","className","fireFunctions","screenX","screenY","i","len","length","function","undefined","createElement","onmousewheel","Array","prototype","ask","opt","types","ignoreKeys","arr","onChange","funct","eventType","controller","$scope","$timeout","onTransitionStart","swiper","alert","activeIndex","slides","setSlide","index","instance","slideTo"],"mappings":"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","file":"main.js","sourcesContent":["!function(n,t,e){\"use strict\";\"object\"==typeof exports?module.exports=e():\"function\"==typeof define&&define.amd?define([],e):n.JSONPretty=e()}(window,angular,function(){\"use strict\";var n=function(n,t,e,r,a){var s=\"<span class=json-key>\",c=\"<span class=json-value>\",i=\"<span class=json-string>\",o=t||\"\";return e&&(o=o+s+e.replace(/[\": ]/g,\"\")+\"</span>: \"),r&&(o=o+('\"'==r[0]?i:c)+r+\"</span>\"),o+(a||\"\")},t=function(t){var e=/^( *)(\"[\\w]+\": )?(\"[^\"]*\"|[\\w.+-]*)?([,[{])?$/gm,r=t;try{return\"string\"==typeof t&&(r=JSON.parse(t)),JSON.stringify(r,null,3).replace(/&/g,\"&amp;\").replace(/\\\\\"/g,\"&quot;\").replace(/</g,\"&lt;\").replace(/>/g,\"&gt;\").replace(e,n)}catch(a){return\"invalid JSON\"}},e=angular.module(\"angular-json-pretty\",[]),r=function(){return{restrict:\"A\",scope:{data:\"=\"},link:function(n,e){n.$watch(\"data\",function(n){n&&e.html(t(n))},!0)}}};return e.directive(\"jsonPretty\",[r]),e});\n","/**\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\n * @version v4.1.6\n * @link https://github.com/ten1seven/what-input\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"whatInput\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"whatInput\"] = factory();\n\telse\n\t\troot[\"whatInput\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\tmodule.exports = function () {\n\t  /*\n\t   * variables\n\t   */\n\n\t  // last used input type\n\t  var currentInput = 'initial';\n\n\t  // last used input intent\n\t  var currentIntent = null;\n\n\t  // cache document.documentElement\n\t  var doc = document.documentElement;\n\n\t  // form input types\n\t  var formInputs = ['input', 'select', 'textarea'];\n\n\t  var functionList = [];\n\n\t  // list of modifier keys commonly used with the mouse and\n\t  // can be safely ignored to prevent false keyboard detection\n\t  var ignoreMap = [16, // shift\n\t  17, // control\n\t  18, // alt\n\t  91, // Windows key / left Apple cmd\n\t  93 // Windows menu / right Apple cmd\n\t  ];\n\n\t  // mapping of events to input types\n\t  var inputMap = {\n\t    keydown: 'keyboard',\n\t    mousedown: 'mouse',\n\t    mousemove: 'mouse',\n\t    MSPointerDown: 'pointer',\n\t    MSPointerMove: 'pointer',\n\t    pointerdown: 'pointer',\n\t    pointermove: 'pointer',\n\t    touchstart: 'touch'\n\t  };\n\n\t  // array of all used input types\n\t  var inputTypes = [];\n\n\t  // boolean: true if touch buffer is active\n\t  var isBuffering = false;\n\n\t  // boolean: true if the page is being scrolled\n\t  var isScrolling = false;\n\n\t  // store current mouse position\n\t  var mousePos = {\n\t    x: null,\n\t    y: null\n\t  };\n\n\t  // map of IE 10 pointer events\n\t  var pointerMap = {\n\t    2: 'touch',\n\t    3: 'touch', // treat pen like touch\n\t    4: 'mouse'\n\t  };\n\n\t  var supportsPassive = false;\n\n\t  try {\n\t    var opts = Object.defineProperty({}, 'passive', {\n\t      get: function get() {\n\t        supportsPassive = true;\n\t      }\n\t    });\n\n\t    window.addEventListener('test', null, opts);\n\t  } catch (e) {}\n\n\t  /*\n\t   * set up\n\t   */\n\n\t  var setUp = function setUp() {\n\t    // add correct mouse wheel event mapping to `inputMap`\n\t    inputMap[detectWheel()] = 'mouse';\n\n\t    addListeners();\n\t    setInput();\n\t  };\n\n\t  /*\n\t   * events\n\t   */\n\n\t  var addListeners = function addListeners() {\n\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t    // can only demonstrate potential, but not actual, interaction\n\t    // and are treated separately\n\n\t    // pointer events (mouse, pen, touch)\n\t    if (window.PointerEvent) {\n\t      doc.addEventListener('pointerdown', updateInput);\n\t      doc.addEventListener('pointermove', setIntent);\n\t    } else if (window.MSPointerEvent) {\n\t      doc.addEventListener('MSPointerDown', updateInput);\n\t      doc.addEventListener('MSPointerMove', setIntent);\n\t    } else {\n\t      // mouse events\n\t      doc.addEventListener('mousedown', updateInput);\n\t      doc.addEventListener('mousemove', setIntent);\n\n\t      // touch events\n\t      if ('ontouchstart' in window) {\n\t        doc.addEventListener('touchstart', touchBuffer);\n\t        doc.addEventListener('touchend', touchBuffer);\n\t      }\n\t    }\n\n\t    // mouse wheel\n\t    doc.addEventListener(detectWheel(), setIntent, supportsPassive ? { passive: true } : false);\n\n\t    // keyboard events\n\t    doc.addEventListener('keydown', updateInput);\n\t  };\n\n\t  // checks conditions before updating new input\n\t  var updateInput = function updateInput(event) {\n\t    // only execute if the touch buffer timer isn't running\n\t    if (!isBuffering) {\n\t      var eventKey = event.which;\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (currentInput !== value || currentIntent !== value) {\n\t        var activeElem = document.activeElement;\n\t        var activeInput = false;\n\n\t        if (activeElem && activeElem.nodeName && formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1) {\n\t          activeInput = true;\n\t        }\n\n\t        if (value === 'touch' ||\n\t        // ignore mouse modifier keys\n\t        value === 'mouse' ||\n\t        // don't switch if the current element is a form input\n\t        value === 'keyboard' && eventKey && activeInput && ignoreMap.indexOf(eventKey) === -1) {\n\t          // set the current and catch-all variable\n\t          currentInput = currentIntent = value;\n\n\t          setInput();\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  // updates the doc and `inputTypes` array with new input\n\t  var setInput = function setInput() {\n\t    doc.setAttribute('data-whatinput', currentInput);\n\t    doc.setAttribute('data-whatintent', currentInput);\n\n\t    if (inputTypes.indexOf(currentInput) === -1) {\n\t      inputTypes.push(currentInput);\n\t      doc.className += ' whatinput-types-' + currentInput;\n\t    }\n\n\t    fireFunctions('input');\n\t  };\n\n\t  // updates input intent for `mousemove` and `pointermove`\n\t  var setIntent = function setIntent(event) {\n\t    // test to see if `mousemove` happened relative to the screen\n\t    // to detect scrolling versus mousemove\n\t    if (mousePos['x'] !== event.screenX || mousePos['y'] !== event.screenY) {\n\t      isScrolling = false;\n\n\t      mousePos['x'] = event.screenX;\n\t      mousePos['y'] = event.screenY;\n\t    } else {\n\t      isScrolling = true;\n\t    }\n\n\t    // only execute if the touch buffer timer isn't running\n\t    // or scrolling isn't happening\n\t    if (!isBuffering && !isScrolling) {\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (currentIntent !== value) {\n\t        currentIntent = value;\n\n\t        doc.setAttribute('data-whatintent', currentIntent);\n\n\t        fireFunctions('intent');\n\t      }\n\t    }\n\t  };\n\n\t  // buffers touch events because they frequently also fire mouse events\n\t  var touchBuffer = function touchBuffer(event) {\n\t    if (event.type === 'touchstart') {\n\t      isBuffering = false;\n\n\t      // set the current input\n\t      updateInput(event);\n\t    } else {\n\t      isBuffering = true;\n\t    }\n\t  };\n\n\t  var fireFunctions = function fireFunctions(type) {\n\t    for (var i = 0, len = functionList.length; i < len; i++) {\n\t      if (functionList[i].type === type) {\n\t        functionList[i].function.call(undefined, currentIntent);\n\t      }\n\t    }\n\t  };\n\n\t  /*\n\t   * utilities\n\t   */\n\n\t  var pointerType = function pointerType(event) {\n\t    if (typeof event.pointerType === 'number') {\n\t      return pointerMap[event.pointerType];\n\t    } else {\n\t      // treat pen like touch\n\t      return event.pointerType === 'pen' ? 'touch' : event.pointerType;\n\t    }\n\t  };\n\n\t  // detect version of mouse wheel event to use\n\t  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t  var detectWheel = function detectWheel() {\n\t    var wheelType = void 0;\n\n\t    // Modern browsers support \"wheel\"\n\t    if ('onwheel' in document.createElement('div')) {\n\t      wheelType = 'wheel';\n\t    } else {\n\t      // Webkit and IE support at least \"mousewheel\"\n\t      // or assume that remaining browsers are older Firefox\n\t      wheelType = document.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll';\n\t    }\n\n\t    return wheelType;\n\t  };\n\n\t  /*\n\t   * init\n\t   */\n\n\t  // don't start script unless browser cuts the mustard\n\t  // (also passes if polyfills are used)\n\t  if ('addEventListener' in window && Array.prototype.indexOf) {\n\t    setUp();\n\t  }\n\n\t  /*\n\t   * api\n\t   */\n\n\t  return {\n\t    // returns string: the current input type\n\t    // opt: 'loose'|'strict'\n\t    // 'strict' (default): returns the same value as the `data-whatinput` attribute\n\t    // 'loose': includes `data-whatintent` value if it's more current than `data-whatinput`\n\t    ask: function ask(opt) {\n\t      return opt === 'loose' ? currentIntent : currentInput;\n\t    },\n\n\t    // returns array: all the detected input types\n\t    types: function types() {\n\t      return inputTypes;\n\t    },\n\n\t    // overwrites ignored keys with provided array\n\t    ignoreKeys: function ignoreKeys(arr) {\n\t      ignoreMap = arr;\n\t    },\n\n\t    // attach functions to input and intent \"events\"\n\t    // funct: function to fire on change\n\t    // eventType: 'input'|'intent'\n\t    onChange: function onChange(funct, eventType) {\n\t      functionList.push({\n\t        function: funct,\n\t        type: eventType\n\t      });\n\t    }\n\t  };\n\t}();\n\n/***/ })\n/******/ ])\n});\n;","(function(angular) {\r\n\r\n    'use strict';\r\n\r\n    var app = angular.module ('app', ['mm.foundation', 'ui.swiper']);\r\n\r\n    app.controller ('mainCtrl', ['$scope', '$timeout', function ($scope, $timeout) {\r\n\r\n        $scope.onTransitionStart = function (swiper) {\r\n            alert (\"The current index is : \" + swiper.activeIndex);\r\n        };\r\n\r\n        $scope.slides = [];\r\n\r\n        $timeout(function () {\r\n            $scope.slides = ['Slide 1', 'Slide 2', 'Slide 3', 'Slide 4'];\r\n        }, 1000);\r\n\r\n\r\n        $scope.setSlide = function (index) {\r\n            $scope.instance.slideTo(index, 300);\r\n        };\r\n    }]);\r\n}(angular));\r\n"],"sourceRoot":"assets/scripts/"}